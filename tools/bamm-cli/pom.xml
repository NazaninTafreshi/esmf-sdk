<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2021 Robert Bosch Manufacturing Solutions GmbH
  ~
  ~ See the AUTHORS file(s) distributed with this work for additional
  ~ information regarding authorship.
  ~
  ~ This Source Code Form is subject to the terms of the Mozilla Public
  ~ License, v. 2.0. If a copy of the MPL was not distributed with this
  ~ file, You can obtain one at https://mozilla.org/MPL/2.0/.
  ~
  ~ SPDX-License-Identifier: MPL-2.0
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <parent>
      <artifactId>sds-sdk-parent</artifactId>
      <groupId>io.openmanufacturing</groupId>
      <version>DEV-SNAPSHOT</version>
      <relativePath>../../pom.xml</relativePath>
   </parent>
   <modelVersion>4.0.0</modelVersion>

   <artifactId>bamm-cli</artifactId>
   <name>BAMM Aspect Meta Model Command Line Tool</name>
   <packaging>jar</packaging>

   <properties>
      <packaging-type>jar</packaging-type>
      <main-class>io.openmanufacturing.sds.BammCli</main-class>
      <binary-name>bamm</binary-name>
      <graalvm-config-path>${project.build.directory}/classes/META-INF/native-image/${project.groupId}/${project.artifactId}</graalvm-config-path>
      <skip.maven.surefire>false</skip.maven.surefire>
      <skip.maven.surefire.report.plugin>false</skip.maven.surefire.report.plugin>
   </properties>

   <dependencies>
      <dependency>
         <groupId>io.openmanufacturing</groupId>
         <artifactId>sds-aspect-model-starter</artifactId>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-databind</artifactId>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
      </dependency>
      <dependency>
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-classic</artifactId>
      </dependency>
      <dependency>
         <groupId>info.picocli</groupId>
         <artifactId>picocli</artifactId>
      </dependency>
      <dependency>
         <groupId>org.fusesource.jansi</groupId>
         <artifactId>jansi</artifactId>
      </dependency>
      <!-- Required for GraalVM build: Annotations for substitution classes -->
      <dependency>
         <groupId>org.graalvm.nativeimage</groupId>
         <artifactId>svm</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.assertj</groupId>
         <artifactId>assertj-core</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>io.openmanufacturing</groupId>
         <artifactId>sds-test-aspect-models</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>io.openmanufacturing</groupId>
         <artifactId>sds-aspect-model-aas-generator</artifactId>
         <scope>compile</scope>
      </dependency>
   </dependencies>

   <build>
      <resources>
         <resource>
            <targetPath>${project.build.outputDirectory}</targetPath>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <includes>
               <include>**/*.properties</include>
               <include>**/*.html</include>
               <include>**/*.js</include>
               <include>**/*.txt</include>
               <include>**/*.xml</include>
            </includes>
         </resource>
      </resources>

      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.graalvm.nativeimage</groupId>
               <artifactId>native-image-maven-plugin</artifactId>
               <version>${graal-version}</version>
               <configuration>
                  <imageName>${binary-name}</imageName>
                  <mainClass>${main-class}</mainClass>
                  <buildArgs>
                     <buildArg>--no-fallback</buildArg>
                     <buildArg>-cp ${project.build.directory}/${project.artifactId}-${project.version}.jar
                     </buildArg>
                     <buildArg>-Djava.awt.headless=true</buildArg>
                  </buildArgs>
               </configuration>
            </plugin>

         </plugins>
      </pluginManagement>

      <plugins>
         <!-- Configure maven surefire plugin (execution of unit tests) -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <systemPropertyVariables>
                  <packaging-type>${packaging-type}</packaging-type>
                  <executableJar>${project.build.directory}/${project.artifactId}-${project.version}.jar
                  </executableJar>
                  <binary>${project.build.directory}/${binary-name}</binary>
                  <graalVmConfigPath>${graalvm-config-path}</graalVmConfigPath>
                  <forkCount>1</forkCount>
                  <reuseForks>true</reuseForks>
                  <argLine>-Xmx4096m</argLine>
               </systemPropertyVariables>
               <skip>${skip.maven.surefire}</skip>
               <reportsDirectory>${project.build.directory}/${testreports.surefire}</reportsDirectory>
               <includes>
                  <include>**/BammCliTest.java</include>
               </includes>
            </configuration>
         </plugin>

         <!-- Disable maven site plugin. It is not required since the report is created in the
              sds-sdk-test-report module -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <version>${maven-site-plugin-version}</version>
            <configuration>
               <skip>true</skip>
            </configuration>
         </plugin>

         <!-- Build fat jar -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <executions>
               <execution>
                  <id>default-shade</id>
                  <phase>package</phase>
                  <goals>
                     <goal>shade</goal>
                  </goals>
                  <configuration>
                     <createDependencyReducedPom>false</createDependencyReducedPom>
                     <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                           <manifestEntries>
                              <Main-Class>${main-class}</Main-Class>
                           </manifestEntries>
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                     </transformers>
                     <artifactSet>
                        <excludes>
                           <!-- Exclude meta model dependency, because meta model resources are already contained in the
                                meta model resolver package -->
                           <exclude>io.openmanufacturing:sds-aspect-meta-model</exclude>
                           <!-- Duplicate annotations that are already contained in javax.annotation-api -->
                           <exclude>javax.annotation:jsr250-api</exclude>
                        </excludes>
                     </artifactSet>
                     <filters>
                        <!-- Required to prevent overlapping resources -->
                        <filter>
                           <artifact>*:*</artifact>
                           <excludes>
                              <exclude>module-info.class</exclude>
                              <exclude>META-INF/*</exclude>
                              <exclude>META-INF/sisu/javax.inject.Named</exclude>
                              <exclude>META-INF/plexus/components.xml</exclude>
                              <exclude>META-INF.versions*/**</exclude>
                              <exclude>META-INF/versions*/**</exclude>
                              <exclude>META-INF/maven/**</exclude>
                              <exclude>plugin.xml</exclude>
                              <exclude>about.html</exclude>
                           </excludes>
                        </filter>
                        <!-- Required to override the excludes above -->
                        <filter>
                           <artifact>${project.groupId}:${project.artifactId}</artifact>
                           <excludeDefaults>false</excludeDefaults>
                           <includes>
                              <include>**</include>
                              <include>META-INF/**</include>
                              <include>git.properties</include>
                           </includes>
                        </filter>
                        <!-- Required to have Model Instantiators available -->
                        <filter>
                           <artifact>io.openmanufacturing:sds-aspect-meta-model-java</artifact>
                           <includes>
                              <include>**</include>
                           </includes>
                        </filter>
                        <!-- Prevent overlapping classes from javax modules -->
                        <filter>
                           <artifact>jakarta.activation:jakarta.activation-api</artifact>
                           <excludes>
                              <exclude>**</exclude>
                           </excludes>
                        </filter>
                     </filters>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>pl.project13.maven</groupId>
            <artifactId>git-commit-id-plugin</artifactId>
            <executions>
               <execution>
                  <id>get-the-git-infos</id>
                  <phase>compile</phase>
                  <goals>
                     <goal>revision</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>
               <generateGitPropertiesFile>true</generateGitPropertiesFile>
               <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
               </generateGitPropertiesFilename>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>unpack-sds-test-aspect-models</id>
                  <phase>validate</phase>
                  <goals>
                     <goal>unpack</goal>
                  </goals>
                  <configuration>
                     <artifactItems>
                        <artifactItem>
                           <groupId>io.openmanufacturing</groupId>
                           <artifactId>sds-test-aspect-models</artifactId>
                           <type>jar</type>
                           <overWrite>true</overWrite>
                           <outputDirectory>
                              ${project.build.outputDirectory}
                           </outputDirectory>
                           <includes>**/*.ttl</includes>
                        </artifactItem>
                     </artifactItems>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
               <!-- Uncomment to enable incremental compilation -->
               <!-- <useIncrementalCompilation>false</useIncrementalCompilation> -->

               <annotationProcessorPaths combine.children="append">
                  <path>
                     <groupId>info.picocli</groupId>
                     <artifactId>picocli-codegen</artifactId>
                     <version>${picocli-version}</version>
                  </path>
               </annotationProcessorPaths>
               <compilerArgs>
                  <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
               </compilerArgs>
               <forceJavacCompilerUse>true</forceJavacCompilerUse>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven-failsafe-plugin-version}</version>
            <executions>
               <execution>
                  <goals>
                     <goal>integration-test</goal>
                     <goal>verify</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <systemPropertyVariables>
                  <packaging-type>${packaging-type}</packaging-type>
                  <executableJar>${project.build.directory}/${project.artifactId}-${project.version}.jar
                  </executableJar>
                  <binary>${project.build.directory}/${binary-name}</binary>
                  <graalVmConfigPath>${graalvm-config-path}</graalVmConfigPath>
                  <forkCount>1</forkCount>
                  <reuseForks>true</reuseForks>
                  <argLine>-Xmx4096m</argLine>
               </systemPropertyVariables>
               <includes>
                  <include>**/BammCliIntegrationTest.java</include>
               </includes>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <id>native</id>
         <properties>
            <packaging-type>native</packaging-type>
            <skip.maven.surefire>true</skip.maven.surefire>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.graalvm.buildtools</groupId>
                  <artifactId>native-maven-plugin</artifactId>
                  <extensions>true</extensions>
                  <executions>
                     <execution>
                        <id>build-native</id>
                        <goals>
                           <goal>build</goal>
                        </goals>
                        <phase>package</phase>
                     </execution>
                  </executions>
                  <configuration>
                     <mainClass>${main-class}</mainClass>
                     <imageName>${binary-name}</imageName>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

   </profiles>
</project>

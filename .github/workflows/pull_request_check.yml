name: Check New Pull Request
on:
  pull_request:
    branches:
    - main
jobs:
  build-and-test:
    name: ${{ matrix.os }} build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.3.0'
          java-version: '17'
          components: 'native-image,js'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Configure Pagefile
        if: matrix.os == 'windows-latest'
        # Fix for "LINK : fatal error LNK1171: unable to load mspdbcore.dll (error code: 1455)":
        # This seems to be caused by running out of memory; increasing page file
        # size suggested here:
        # https://github.com/actions/virtual-environments/issues/3420#issuecomment-861342418
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 16GB
          maximum-size: 16GB
          disk-root: "C:"

      - name: Set Swap Space
        if: matrix.os == 'ubuntu-latest'
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      - name: Build and run tests
        run: |
          java --version
          export MAVEN_OPTS="-Xmx4096m"
          mvn -B -pl '!io.openmanufacturing:bamm-cli' clean install
          cd tools/bamm-cli
          mvn -B clean verify
          mvn -B verify -Pnative
        shell: bash

      - name: Upload executable jar
        # We only need one OS job to upload the jars
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: bamm-cli-jar
          path: tools/bamm-cli/target/bamm-cli-*.jar

      - name: Upload binary (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: bamm-cli-binary-${{ matrix.os }}
          # We put all the possible binary names in the path,
          # upload-artifact will upload the one(s) that are actually present
          path: |
            tools/bamm-cli/target/bamm.exe

      - name: Upload binary (Linux/Mac)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v2
        with:
          name: bamm-cli-binary-${{ matrix.os }}
          # We put all the possible binary names in the path,
          # upload-artifact will upload the one(s) that are actually present
          path: |
            tools/bamm-cli/target/bamm
